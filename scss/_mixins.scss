@use "sass:math";
@use "sass:meta";

$phone: 380px;
$tablet: 768px;
$desktop: 1148px;
$desktop-large: 1800px;

/*
------ Media queries

Usage : @include mq('max', $tablet) {...}
            => @media (max-width: 768px) { ... }
    ou 
        @include mq($phone, $tablet) {...}
            => @media (min-width: 480px) and (max-width: 768px) { ... }
*/
@mixin mq($arg...) {
    @if type_of(nth($arg, 1)) == string {
        @media (#{nth($arg, 1)}-width: nth($arg, 2)){
            @content;
        }
    } @else {
        @media (min-width: nth($arg, 1)) and (max-width: nth($arg, 2)){
            @content;
        }
    }
}

/// Width & height of a block
/// If only one parameter is provided, it's a square !
/// @param {Length} $width
/// @param {Length} $height
@mixin size($width, $height: $width) {
    width: $width;
    height: $height;
}


/// Center vertically & horizontally with flex
@mixin flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
}

/// Center vertically & horizontally with grid
@mixin grid-center {
    display: grid;
    place-content: center;
}

// Pour les knobs :
/// Triangle "tangent" au cercle de rayon $rayon pointant vers la droite
@mixin triangle($rayon, $angle, $couleur: red){
    $angle: math.clamp(20deg, $angle, 140deg); // limite l'angle Ã  un intervalle raisonnable
    $angle: $angle / 2; // on travaille avec le demi angle
    $hauteur: $rayon * math.cos($angle);
    $largeur: $rayon * (math.cos($angle) / math.tan($angle));
    $left: $rayon * math.sin($angle);
    top: 50%;
    left: calc(50% + #{$left});
    transform-origin: $left*-1 50%;
    border-style: solid;
    border-width: $hauteur 0 $hauteur $largeur;
    border-color: transparent transparent transparent $couleur;
}