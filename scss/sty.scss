@use "sass:color";
@import 'mixins';
//@import 'switches';
$angleTriangle: 90deg;
$angleRotation: 20deg;
$rayon: 1.2rem;
$clr-1: hsl(300, 100%, 50%);
$clr-2: hsl(120, 61%, 50%);


*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: content-box;
}

:root {
  --fondPage: hsl(45, 21%, 93%);
  --clr-1: #{$clr-1};
  --clr-2: #{$clr-2};
  --clr-grey: 0, 0%, 40%;
  --rad: 0.4rem;


  --rayon-knob: #{$rayon};
  --angleRotation: #{$angleRotation};

  --bsh: 0px 0px 2px rgba(0, 0, 0, .5);
}

html {
  font-size: 16px;
}

body {
  background-color: var(--fondPage);
  min-height: 100vh;
  @include grid-center;
}

main {
  width: 60vw;
  display: grid;
  row-gap: 1.6em;
  padding: 2rem;
  background-color: #fff;
  border-radius: .5rem;
  box-shadow: 0 0 1rem rgba(0,0,0,.25);
}

label,
button {
  cursor: pointer;
}

.checkbox {
  // masque le checkbox
  position: absolute;
  left: -100vw;
}

#leMessage{
  --bdr: 2px;
  --h: .6em;
  --clr-bdr: red;
  --bgc: #fff;
  width: max(40ch, 50%);
  padding: 1em;
  margin: auto;
  position: relative;
  border: var(--bdr) solid var(--clr-bdr);
  border-radius: .5em;
  background-color: var(--bgc);

  &::before,
  &::after{
    position: absolute;
    content: '';
    @include size(0);
    left: 2em;
    border-style: solid;
    border-width: 0 var(--h) var(--h) var(--h);
  }
  
  &::before{
    top: calc(var(--h) * -1);
    border-color: transparent transparent var(--clr-bdr) transparent;
  }
  
  &::after{
    top: calc(var(--h) * -1 + var(--bdr) * 1.414);
    border-color: transparent transparent var(--bgc) transparent;
  }
}

/// ------------------------------------------------- Colors inputs
.col {
  display: grid;
  grid-template-columns: 1fr 12ch;

  label {
    grid-area: 1 / 1 / 2 /3;
    font-family: sans-serif;
    font-size: 1.2rem;
    font-weight: 600;
    color: var(--clr-1);
    text-transform: uppercase;
  }

  input[type="text"] {
    grid-area: 2 / 1 / 3 / 2;
    border-right-width: 0;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  button {
    grid-area: 2 / 2 / 3 / 3;
    appearance: none;
    border: 0;
    border-top-right-radius: var(--rad);
    border-bottom-right-radius: var(--rad);
    background-color: var(--clr-1);
    font-family: sans-serif;
    font-size: 2rem;
    color: #fff;
    transition: background-color .125s ease-in-out;

    &:hover{
      background-color: color.scale($clr-1, $lightness: -40%);
    }

    &.copied{
      background-color: var(--clr-2);
    }
  }
}

input[type="text"] {
  appearance: none;
  padding: .25rem .5rem;
  border-style: solid;
  border-width: 1px;
  border-color: var(--clr-1);
  border-radius: var(--rad);
  font-family: "JetBrains Mono", monospace;
  font-size: 2rem;
  line-height: 1;
  color: var(--clr-1);

  &:focus {
    outline: 0;
    box-shadow: 0 0 8px rebeccapurple;
  }
}

/// ---------------------------------------------------------- Settings
// 1) Knobs ----------------------------
.knob_wrap {
  display: grid;
  grid-template-columns: #{$rayon * 2} 1fr;
  grid-template-rows: 1fr 1fr;
  gap: 1em;
}

.knob {
  grid-area: 1 / 1 / 3 / 2;
  @include grid-center;
  z-index: 1;

  & label {
    @include size($rayon * 2);
    position: relative;
    background-color: var(--clr-2);
    border-radius: 50%;

    &::before,
    &::after {
      content: '';
      position: absolute;
      transition: transform .25s ease-in-out;
    }

    &::before {
      // Curseur knob
      --haut: 2px;
      width: var(--rayon-knob);
      height: var(--haut);
      top: 50%;
      left: 50%;
      transform: translateY(-50%) rotate(var(--angleRotation));
      transform-origin: 0 50%;
      border-radius: calc(var(--haut) / 2);
      background-color: hsla(0, 0%, 100%, .45);
    }

    &::after {
      // Pointe
      @include size(0);
      @include triangle($rayon, $angleTriangle, var(--clr-2));
      transform: translateY(-50%) rotate(var(--angleRotation));
      z-index: -1;
    }
  }

  .checkbox:checked~label {
    background-color: var(--clr-1);

    &::before,
    &::after {
      transform: translatey(-50%) rotate(calc(var(--angleRotation) * -1));
    }

    &::after {
      border-color: transparent transparent transparent var(--clr-1);
    }
  }
}

.choice {
  justify-self: start;
  align-self: center;
  font-family: sans-serif;
  font-size: 1.2rem;
  color: var(--clr-1);

  &~.choice {
    // s√©lectionne le 2e .choice
    color: var(--clr-2);
  }

  &.disabled {
    color: rgb(167, 167, 167);
  }
}

// 2) Toggle switches ----------------------------
.toggle {
  label {
    --w: 4.2rem;
    --h: 2rem;
    --m: .2rem; // "margin"
    display: block;
    position: relative;
    width: var(--w);
    height: var(--h);
    border-radius: calc(var(--h) / 2);
    background-color: hsl(var(--clr-grey));
    transition: background-color .25s linear;
    box-shadow: var(--bsh) inset;

    &::before,
    &::after {
      content: '';
      position: absolute;
      border-radius: 50%;
      transition: left .125s linear;
    }

    &::before{
      width: calc(var(--h) - (var(--m) * 2));
      height: calc(var(--h) - (var(--m) * 2));
      background: #fff;
      top: var(--m);
      left: var(--m);
      box-shadow: var(--bsh);
    }

    &:focus::after,
    &:hover::after{
      --l: 8px;
      @include size(var(--l));
      top: calc(var(--h)/2 - var(--l)/2);
      left: calc(var(--h)/2 - var(--l)/2);
      background-color: hsla(var(--clr-grey), .5);
      z-index: 100;
    }
  }

  input:checked+label {
    background-color: var(--clr-1);

    &::before {
      left: calc(var(--w) - ((var(--h) - var(--m))));
    }

    &:focus::after,
    &:hover::after{
      left: calc(var(--w) - ((var(--h)/2 + var(--m))));
    }
  }
}